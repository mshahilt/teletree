<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Register Form</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
  <style>
    .footer {
      background-color: #1e1e1e;
      color: #fff;
      padding: 40px 20px;
      border-radius: 20px 20px 0 0;
    }

    .footer h5 {
      font-weight: 600;
      margin-bottom: 20px;
    }

    .footer ul {
      list-style: none;
      padding: 0;
    }

    .footer ul li {
      margin-bottom: 10px;
    }

    .footer ul li a {
      color: #fff;
      text-decoration: none;
    }

    .footer ul li a:hover {
      text-decoration: underline;
    }

    .social-icons a {
      display: inline-block;
      width: 40px;
      height: 40px;
      border: 1px solid #fff;
      border-radius: 50%;
      color: #fff;
      text-align: center;
      line-height: 40px;
      margin-right: 10px;
      font-size: 18px;
    }

    .whatsapp-float {
      position: absolute;
      bottom: 20px;
      right: 20px;
      background-color: #25d366;
      color: white;
      border-radius: 50%;
      width: 50px;
      height: 50px;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 24px;
    }

    .about-banner {
      background-image: url('dummy-image.webp');
      background-size: cover;
      background-position: center;
      border-radius: 20px;
      height: 300px;
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
    }

    .about-banner h2 {
      font-size: 2.5rem;
      font-weight: bold;
      margin: 0;
    }

    @media (max-width: 768px) {
      .about-banner h2 {
        font-size: 1.8rem;
      }
    }

    body {
      font-family: 'Segoe UI', sans-serif;
      background-color: #fff;
    }

    .form-control, .form-select {
      border-radius: 10px;
    }

    .form-label {
      font-weight: 600;
    }

    .reg-btn {
      background-color: #1abe59;
      color: white;
    }

    .reg-btn:disabled {
      background-color: #adb5bd;
      cursor: not-allowed;
    }

    .verify-btn {
      background-color: #007bff;
      color: white;
      border: none;
      border-radius: 10px;
      padding: 8px 16px;
      transition: all 0.3s ease;
    }

    .verify-btn:hover:not(:disabled) {
      background-color: #0056b3;
    }

    .verify-btn:disabled {
      background-color: #adb5bd;
      cursor: not-allowed;
    }

    .verify-btn.verified {
      background-color: #28a745;
    }

    .signup-form {
      padding-left: 50px;
      padding-right: 50px;
      padding-top: 30px;
    }

    .loading-spinner {
      display: inline-block;
      width: 16px;
      height: 16px;
      border: 2px solid #ffffff;
      border-radius: 50%;
      border-top-color: transparent;
      animation: spin 1s ease-in-out infinite;
    }

    @keyframes spin {
      to { transform: rotate(360deg); }
    }

    .alert {
      border-radius: 10px;
      margin-bottom: 1rem;
    }

    .otp-input {
      width: 50px;
      height: 50px;
      text-align: center;
      font-size: 1.2rem;
      font-weight: bold;
      border: 2px solid #dee2e6;
      border-radius: 8px;
      margin: 0 5px;
    }

    .otp-input:focus {
      border-color: #007bff;
      box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
    }

    .countdown {
      font-size: 0.9rem;
      color: #6c757d;
    }
  </style>
</head>
<body>
  <nav class="flex items-center justify-between p-4 shadow-md">
    <!-- Logo and Tagline -->
    <div class="flex items-center space-x-2">
      <img src="your-logo.png" alt="Logo" class="h-12 w-12" />
      <div>
        <h1 class="text-lg font-bold text-blue-900 flex items-center">
          Maids Hands 4U
          <span class="ml-1 text-blue-500">âœ¨</span>
        </h1>
        <p class="text-sm text-gray-400">For a helping hand</p>
      </div>
    </div>

    <!-- Navigation Links -->
    <div class="hidden md:flex space-x-8 text-gray-700 font-medium">
      <a href="#">Home</a>
      <a href="#" class="text-blue-900">About</a>
      <a href="#">Contact</a>
      <a href="#">Categories</a>
      <a href="#">Pricing</a>
    </div>

    <!-- Buttons -->
    <div class="flex items-center space-x-3">
      <button class="bg-blue-50 text-blue-900 font-semibold px-4 py-2 rounded-md">
        Register as Maid
      </button>
      <button class="bg-blue-900 text-white font-semibold px-4 py-2 rounded-md flex items-center space-x-1">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none"
             viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                d="M15 12H3m0 0l4-4m-4 4l4 4m13-4a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
        <span>User Login</span>
      </button>
    </div>
  </nav>
  
  <div class="container my-5">
    <div class="about-banner">
      <h2>Register</h2>
    </div>
  </div>

  <div class="container signup-form">
    <h2 class="mb-4 text-center fw-bold">Register Form</h2>
    
    <!-- Alert Messages -->
    <div id="alertContainer"></div>
    
   <form id="signupForm" enctype="multipart/form-data">
  <div class="row g-3">
    <!-- Name -->
    <div class="col-md-6">
      <label class="form-label">Name <span class="text-danger">*</span></label>
      <input type="text" name="name" class="form-control" placeholder="Enter your name" required>
    </div>

    <!-- District -->
    <div class="col-md-6">
      <label class="form-label">District <span class="text-danger">*</span></label>
      <select name="district" class="form-select" required>
        <option value="">Select District</option>
        <option>District 1</option>
        <option>District 2</option>
        <option>District 3</option>
      </select>
    </div>

    <!-- Phone -->
    <div class="col-md-6">
      <label class="form-label">Phone No. <span class="text-danger">*</span></label>
      <div class="input-group">
        <span class="input-group-text">+91</span>
        <input type="tel" name="phone" id="phoneInput" class="form-control" placeholder="Enter your phone number" required maxlength="10">
        <button class="verify-btn ms-2" type="button" id="verifyBtn" onclick="sendOTP()">
          <span id="verifyBtnText">Verify</span>
          <span id="verifyBtnSpinner" class="loading-spinner d-none"></span>
        </button>
      </div>
    </div>

    <!-- Address -->
    <div class="col-md-6">
      <label class="form-label">Address <span class="text-danger">*</span></label>
      <textarea name="address" class="form-control" rows="3" placeholder="Enter your address" required></textarea>
    </div>

    <!-- Pincode -->
    <div class="col-md-6">
      <label class="form-label">Pincode <span class="text-danger">*</span></label>
      <input type="text" name="pincode" class="form-control" placeholder="Enter your pincode" required maxlength="6">
    </div>

    <!-- Email -->
    <div class="col-md-6">
      <label class="form-label">Email Address <span class="text-danger">*</span></label>
      <input type="email" name="email" class="form-control" placeholder="Enter your email" required>
    </div>

   

    <!-- Profile Photo Upload -->
    <div class="col-md-6">
      <label class="form-label">Profile Photo <span class="text-danger">*</span></label>
      <input type="file" name="profilePhoto" class="form-control" accept="image/*" required>
    </div>

    <!-- Gender Selection -->
    <div class="col-md-6">
      <label class="form-label">Gender <span class="text-danger">*</span></label>
      <select name="gender" class="form-select" required>
        <option value="">Select Gender</option>
        <option value="Male">Male</option>
        <option value="Female">Female</option>
        <option value="Other">Other</option>
      </select>
    </div>

    <!-- Age -->
    <div class="col-md-6">
      <label class="form-label">Age <span class="text-danger">*</span></label>
      <input type="number" name="age" class="form-control" min="18" max="100" placeholder="Enter your age" required>
    </div>

    <!-- Experience -->
    <div class="col-md-6">
      <label class="form-label">Experience (Years) <span class="text-danger">*</span></label>
      <input type="number" name="experience" class="form-control" min="0" max="50" placeholder="Enter your experience in years" required>
    </div>

    <!-- Languages -->
    <div class="col-md-6">
      <label class="form-label">Languages Known <span class="text-danger">*</span></label>
      <input type="text" name="languages" class="form-control" placeholder="e.g. English, Hindi, Arabic" required>
    </div>

    <!-- Job Category -->
    <div class="col-md-6">
      <label class="form-label">Job Category <span class="text-danger">*</span></label>
      <select name="jobCategory" class="form-select" required>
        <option value="">Select Job Category</option>
        <option value="IT">IT</option>
        <option value="Sales">Sales</option>
        <option value="Marketing">Marketing</option>
        <option value="Healthcare">Healthcare</option>
        <option value="Education">Education</option>
        <option value="Construction">Construction</option>
      </select>
    </div>
  </div>

  <div class="mt-4 text-center">
    <button type="submit" id="registerBtn" class="reg-btn btn px-4 py-2 rounded-pill" disabled>
      <span id="registerBtnText">Register</span>
      <span id="registerBtnSpinner" class="loading-spinner d-none"></span>
    </button>
    <p class="mt-2 text-muted small">
      <i class="bi bi-info-circle me-1"></i>
      Please verify your phone number to enable registration
    </p>
  </div>
</form>

  </div>

  <footer class="footer position-relative mt-5">
    <div class="container">
      <div class="row gy-4">
        <!-- Logo + Social -->
        <div class="col-12 col-sm-6 col-lg-3">
          <img src="logo.png" alt="Logo" class="mb-2" style="max-width: 150px;">
          <h6 class="mt-3">Follow Us</h6>
          <div class="social-icons mb-3 mt-3">
            <a href="#"><i class="bi bi-facebook"></i></a>
            <a href="#"><i class="bi bi-instagram"></i></a>
            <a href="#"><i class="bi bi-linkedin"></i></a>
          </div>
          <p style="font-size: 14px;">
            We connect you with reliable, pre-verified maids to simplify your household needs.
          </p>
        </div>

        <!-- Quick Links -->
        <div class="col-12 col-sm-6 col-lg-3">
          <h5>Quick Links</h5>
          <ul>
            <li><a href="#">Home</a></li>
            <li><a href="#">About</a></li>
            <li><a href="#">Contact</a></li>
            <li><a href="#">Categories</a></li>
            <li><a href="#">Register as Maid</a></li>
          </ul>
        </div>

        <!-- Legal -->
        <div class="col-12 col-sm-6 col-lg-3">
          <h5>Legal</h5>
          <ul>
            <li><a href="#">Terms & Conditions</a></li>
            <li><a href="#">Privacy Policy</a></li>
            <li><a href="#">Cancellation and Refund</a></li>
            <li><a href="#">Shipping and Delivery</a></li>
          </ul>
        </div>

        <!-- Contact Info -->
        <div class="col-12 col-sm-6 col-lg-3">
          <h5>Official Info</h5>
          <p class="mb-2">BELLUCCIYA MARKETING AND MANAGEMENT PRIVATE LIMITED<br>
            Metro Pillar No. 75, Maniyatt Building,<br>
            Near Pulinchodu Metro Station, Aluva, Ernakulam, KERALA, PIN : 683106
          </p>
          <p><i class="bi bi-telephone me-2"></i>9400438406</p>
          <p><i class="bi bi-envelope me-2"></i>jeemonwishes@gmail.com</p>
        </div>
      </div>
    </div>

    <!-- WhatsApp Floating Icon -->
    <a href="https://wa.me/919400438406" class="whatsapp-float">
      <i class="bi bi-whatsapp"></i>
    </a>
  </footer>

  <!-- OTP Verification Modal -->
  <div class="modal fade" id="otpModal" tabindex="-1" aria-labelledby="otpModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content rounded-3">
        <div class="modal-header border-0 pb-0">
          <h5 class="modal-title" id="otpModalLabel">OTP Verification</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body pt-2">
          <p class="text-center mb-3">
            Please enter the 6-digit OTP sent to<br>
            <strong>+91 <span id="otpPhoneNumber"></span></strong>
          </p>
          
          <div class="d-flex justify-content-center mb-3">
            <input type="text" class="otp-input" maxlength="1" id="otp1">
            <input type="text" class="otp-input" maxlength="1" id="otp2">
            <input type="text" class="otp-input" maxlength="1" id="otp3">
            <input type="text" class="otp-input" maxlength="1" id="otp4">
            <input type="text" class="otp-input" maxlength="1" id="otp5">
            <input type="text" class="otp-input" maxlength="1" id="otp6">
          </div>
          
          <div class="text-center mb-3">
            <span class="countdown" id="resendTimer">Resend OTP in 60s</span>
          </div>
          
          <button type="button" class="btn btn-success w-100 mb-2" id="verifyOtpBtn" onclick="verifyOTP()">
            <span id="verifyOtpBtnText">Verify OTP</span>
            <span id="verifyOtpBtnSpinner" class="loading-spinner d-none"></span>
          </button>
          
          <button type="button" class="btn btn-outline-primary w-100" id="resendOtpBtn" onclick="resendOTP()" disabled>
            Resend OTP
          </button>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    // Global variables
    let isPhoneVerified = false;
    let resendCountdown = 0;
    let countdownInterval;
    const otpModal = new bootstrap.Modal(document.getElementById('otpModal'));

    // Form validation
    document.getElementById('signupForm').addEventListener('input', function(e) {
     
      
      if (e.target.name === 'phone') {
        // Reset verification status when phone number changes
        if (isPhoneVerified) {
          isPhoneVerified = false;
          updateVerifyButton();
          updateRegisterButton();
        }
      }
    });

    // Password validation
  
    // OTP input handling
    document.querySelectorAll('.otp-input').forEach((input, index) => {
      input.addEventListener('input', function(e) {
        if (e.target.value.length === 1 && index < 5) {
          document.getElementById(`otp${index + 2}`).focus();
        }
      });
      
      input.addEventListener('keydown', function(e) {
        if (e.key === 'Backspace' && !e.target.value && index > 0) {
          document.getElementById(`otp${index}`).focus();
        }
      });
    });

    // Show alert messages
    function showAlert(message, type = 'info') {
      const alertContainer = document.getElementById('alertContainer');
      const alertDiv = document.createElement('div');
      alertDiv.className = `alert alert-${type} alert-dismissible fade show`;
      alertDiv.innerHTML = `
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
      `;
      alertContainer.appendChild(alertDiv);
      
      // Auto-dismiss after 5 seconds
      setTimeout(() => {
        if (alertDiv.parentNode) {
          alertDiv.remove();
        }
      }, 5000);
    }

    // Send OTP
    async function sendOTP() {
      const phoneInput = document.getElementById('phoneInput');
      const phone = phoneInput.value.trim();
      
      if (!phone || phone.length !== 10) {
        showAlert('Please enter a valid 10-digit phone number', 'warning');
        phoneInput.focus();
        return;
      }
      
      const verifyBtn = document.getElementById('verifyBtn');
      const verifyBtnText = document.getElementById('verifyBtnText');
      const verifyBtnSpinner = document.getElementById('verifyBtnSpinner');
      
      // Show loading state
      verifyBtn.disabled = true;
      verifyBtnText.classList.add('d-none');
      verifyBtnSpinner.classList.remove('d-none');
      
      try {
        const response = await fetch(`/otp/send?phone=${phone}`, {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json'
          }
        });
        
        const data = await response.json();
        
        if (data.success) {
          // Show OTP modal
          document.getElementById('otpPhoneNumber').textContent = phone;
          clearOTPInputs();
          otpModal.show();
          startResendCountdown();
          showAlert('OTP sent successfully to your phone number', 'success');
        } else {
          showAlert(data.message || 'Failed to send OTP. Please try again.', 'danger');
        }
      } catch (error) {
        console.error('Error sending OTP:', error);
        showAlert('Network error. Please check your connection and try again.', 'danger');
      } finally {
        // Reset button state
        verifyBtn.disabled = false;
        verifyBtnText.classList.remove('d-none');
        verifyBtnSpinner.classList.add('d-none');
      }
    }

    // Verify OTP
    async function verifyOTP() {
      const otpInputs = document.querySelectorAll('.otp-input');
      const otp = Array.from(otpInputs).map(input => input.value).join('');
      
      if (otp.length !== 6) {
        showAlert('Please enter complete 6-digit OTP', 'warning');
        return;
      }
      
      const phone = document.getElementById('phoneInput').value.trim();
      const verifyOtpBtn = document.getElementById('verifyOtpBtn');
      const verifyOtpBtnText = document.getElementById('verifyOtpBtnText');
      const verifyOtpBtnSpinner = document.getElementById('verifyOtpBtnSpinner');
      
      // Show loading state
      verifyOtpBtn.disabled = true;
      verifyOtpBtnText.classList.add('d-none');
      verifyOtpBtnSpinner.classList.remove('d-none');
      
      try {
        const response = await fetch('/otp/verify', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            phone: phone,
            otp: otp
          })
        });
        
        const data = await response.json();
        
        if (data.success) {
          isPhoneVerified = true;
          otpModal.hide();
          updateVerifyButton();
          updateRegisterButton();
          showAlert('Phone number verified successfully!', 'success');
          clearInterval(countdownInterval);
        } else {
          showAlert(data.message || 'Invalid OTP. Please try again.', 'danger');
          // Clear OTP inputs on failure
          clearOTPInputs();
        }
      } catch (error) {
        console.error('Error verifying OTP:', error);
        showAlert('Network error. Please check your connection and try again.', 'danger');
      } finally {
        // Reset button state
        verifyOtpBtn.disabled = false;
        verifyOtpBtnText.classList.remove('d-none');
        verifyOtpBtnSpinner.classList.add('d-none');
      }
    }

    // Resend OTP
    async function resendOTP() {
      const phone = document.getElementById('phoneInput').value.trim();
      
      try {
        const response = await fetch(`/otp/send?phone=${phone}`, {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json'
          }
        });
        
        const data = await response.json();
        
        if (data.success) {
          clearOTPInputs();
          startResendCountdown();
          showAlert('OTP resent successfully', 'success');
        } else {
          showAlert(data.message || 'Failed to resend OTP', 'danger');
        }
      } catch (error) {
        console.error('Error resending OTP:', error);
        showAlert('Network error. Please try again.', 'danger');
      }
    }

    // Update verify button appearance
    function updateVerifyButton() {
      const verifyBtn = document.getElementById('verifyBtn');
      const verifyBtnText = document.getElementById('verifyBtnText');
      
      if (isPhoneVerified) {
        verifyBtn.classList.add('verified');
        verifyBtn.disabled = true;
        verifyBtnText.innerHTML = '<i class="bi bi-check-circle me-1"></i>Verified';
      } else {
        verifyBtn.classList.remove('verified');
        verifyBtn.disabled = false;
        verifyBtnText.textContent = 'Verify';
      }
    }

    // Update register button state
    function updateRegisterButton() {
      const registerBtn = document.getElementById('registerBtn');
      registerBtn.disabled = !isPhoneVerified;
    }

    // Clear OTP inputs
    function clearOTPInputs() {
      document.querySelectorAll('.otp-input').forEach(input => {
        input.value = '';
      });
      document.getElementById('otp1').focus();
    }

    // Start resend countdown
    function startResendCountdown() {
      resendCountdown = 60;
      const resendTimer = document.getElementById('resendTimer');
      const resendOtpBtn = document.getElementById('resendOtpBtn');
      
      resendOtpBtn.disabled = true;
      
      countdownInterval = setInterval(() => {
        resendCountdown--;
        resendTimer.textContent = `Resend OTP in ${resendCountdown}s`;
        
        if (resendCountdown <= 0) {
          clearInterval(countdownInterval);
          resendTimer.textContent = 'Did not receive OTP?';
          resendOtpBtn.disabled = false;
        }
      }, 1000);
    }

    // Handle form submission
    document.getElementById('signupForm').addEventListener('submit', async function(e) {
      e.preventDefault();
      
      if (!isPhoneVerified) {
        showAlert('Please verify your phone number first', 'warning');
        return;
      }
      
      const formData = new FormData(this);
      const data = Object.fromEntries(formData.entries());
      
      // Validate password match
    
      
      const registerBtn = document.getElementById('registerBtn');
      const registerBtnText = document.getElementById('registerBtnText');
      const registerBtnSpinner = document.getElementById('registerBtnSpinner');
      
      // Show loading state
      registerBtn.disabled = true;
      registerBtnText.classList.add('d-none');
      registerBtnSpinner.classList.remove('d-none');
      
    try {
  console.log("data.profilePhoto:", data.profilePhoto);

  const formData = new FormData();
  formData.append('name', data.name);
  formData.append('district', data.district);
  formData.append('phone', data.phone);
  formData.append('address', data.address);
  formData.append('pincode', data.pincode);
  formData.append('email', data.email);
  formData.append('profilePhoto', data.profilePhoto);
  formData.append('gender', data.gender);
  formData.append('experience', data.experience);
  formData.append('age', data.age);
  formData.append('languages', JSON.stringify(data.languages));
  formData.append('jobCategory', data.jobCategory);

  const response = await fetch('/registerAsTelecaller', {
    method: 'POST',
    body: formData
  });

  const result = await response.json();

  if (result.success) {
    showAlert('Registration successful! Welcome to TeleTree', 'success');
    this.reset();
    isPhoneVerified = false;
    updateVerifyButton();
    updateRegisterButton();
  } else {
    showAlert(result.message || 'Registration failed. Please try again.', 'danger');
  }

} catch (error) {
        console.error('Error during registration:', error);
        showAlert('Network error. Please check your connection and try again.', 'danger');
      } finally {
        // Reset button state
        registerBtn.disabled = !isPhoneVerified;
        registerBtnText.classList.remove('d-none');
        registerBtnSpinner.classList.add('d-none');
      }
    });

    // Initialize page
    document.addEventListener('DOMContentLoaded', function() {
      updateRegisterButton();
    });
  </script>
</body>
</html>